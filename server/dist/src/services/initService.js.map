{"version":3,"file":"initService.js","sources":["src/services/initService.ts"],"sourceRoot":"/","sourcesContent":["// server/src/services/initService.ts\nimport prisma from \"../lib/prisma.js\";\n\nexport async function getUserWithSettingsById(userId: string) {\n  const user = await prisma.user.findUnique({\n    where: { id: userId },\n    select: {\n      id: true,\n      firstName: true,\n      lastName: true,\n      username: true,\n      email: true,\n      signature: true,\n      DOB: true,\n      truckView: true,\n      tascoView: true,\n      laborView: true,\n      mechanicView: true,\n      permission: true,\n      image: true,\n      terminationDate: true,\n      accountSetup: true,\n      clockedIn: true,\n      companyId: true,\n      middleName: true,\n      secondLastName: true,\n      lastSeen: true,\n      accountSetupToken: true,\n      Contact: true,\n      UserSettings: true,\n    },\n  });\n\n  // Jobsites (for profitStore)\n  const jobsites = await prisma.jobsite.findMany({\n    select: {\n      id: true,\n      qrId: true,\n      name: true,\n      approvalStatus: true,\n      archiveDate: true,\n    },\n  });\n\n  // Equipment (for equipmentStore)\n  const equipments = await prisma.equipment.findMany({\n    select: {\n      id: true,\n      name: true,\n      qrId: true,\n      approvalStatus: true,\n      status: true,\n    },\n  });\n\n  // CostCodes (for costCodeStore)\n  const costCodes = await prisma.costCode.findMany({\n    select: {\n      name: true,\n      isActive: true,\n      code: true,\n      CCTags: {\n        select: {\n          id: true,\n          name: true,\n          description: true,\n          Jobsites: {\n            select: {\n              id: true,\n              name: true,\n            },\n          },\n        },\n      },\n    },\n  });\n\n  console.log(\"user:\", user);\n  console.log(\"jobsites:\", jobsites);\n  console.log(\"equipments:\", equipments);\n  console.log(\"costCodes:\", costCodes);\n\n  return {\n    user,\n    jobsites,\n    equipments,\n    costCodes,\n  };\n}\n"],"names":[],"mappings":"AAAA,qCAAqC;;;AACrC,OAAO,MAAM,MAAM,kBAAkB,CAAC;AAEtC,MAAM,CAAC,KAAK,UAAU,uBAAuB,CAAC,MAAc;IAC1D,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxC,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE;QACrB,MAAM,EAAE;YACN,EAAE,EAAE,IAAI;YACR,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,IAAI;YACX,SAAS,EAAE,IAAI;YACf,GAAG,EAAE,IAAI;YACT,SAAS,EAAE,IAAI;YACf,SAAS,EAAE,IAAI;YACf,SAAS,EAAE,IAAI;YACf,YAAY,EAAE,IAAI;YAClB,UAAU,EAAE,IAAI;YAChB,KAAK,EAAE,IAAI;YACX,eAAe,EAAE,IAAI;YACrB,YAAY,EAAE,IAAI;YAClB,SAAS,EAAE,IAAI;YACf,SAAS,EAAE,IAAI;YACf,UAAU,EAAE,IAAI;YAChB,cAAc,EAAE,IAAI;YACpB,QAAQ,EAAE,IAAI;YACd,iBAAiB,EAAE,IAAI;YACvB,OAAO,EAAE,IAAI;YACb,YAAY,EAAE,IAAI;SACnB;KACF,CAAC,CAAC;IAEH,6BAA6B;IAC7B,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC7C,MAAM,EAAE;YACN,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI;YACV,cAAc,EAAE,IAAI;YACpB,WAAW,EAAE,IAAI;SAClB;KACF,CAAC,CAAC;IAEH,iCAAiC;IACjC,MAAM,UAAU,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;QACjD,MAAM,EAAE;YACN,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI;YACV,cAAc,EAAE,IAAI;YACpB,MAAM,EAAE,IAAI;SACb;KACF,CAAC,CAAC;IAEH,gCAAgC;IAChC,MAAM,SAAS,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;QAC/C,MAAM,EAAE;YACN,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,IAAI;YACV,MAAM,EAAE;gBACN,MAAM,EAAE;oBACN,EAAE,EAAE,IAAI;oBACR,IAAI,EAAE,IAAI;oBACV,WAAW,EAAE,IAAI;oBACjB,QAAQ,EAAE;wBACR,MAAM,EAAE;4BACN,EAAE,EAAE,IAAI;4BACR,IAAI,EAAE,IAAI;yBACX;qBACF;iBACF;aACF;SACF;KACF,CAAC,CAAC;IAEH,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC3B,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IACnC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;IACvC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAErC,OAAO;QACL,IAAI;QACJ,QAAQ;QACR,UAAU;QACV,SAAS;KACV,CAAC;AACJ,CAAC","debug_id":"a606c31c-e383-5ca7-9c86-8498e1896d57"}
{"version":3,"file":"config.js","sourceRoot":"/","sources":["src/lib/config.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AAEH,OAAO,eAAe,MAAM,4BAA4B,CAAC;AAEzD,MAAM,CAAC,MAAM,MAAM,GAAG;IACpB,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI;IAC9B,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,aAAa;IAC9C,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,EAAE;IAClD,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,iBAAiB;IACtD,aAAa,EAAE,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,UAAU;CACjF,CAAC;AAEX,eAAe,MAAM,CAAC","sourcesContent":["/**\n * Parse an environment value into a number (seconds).\n * Supports:\n *  - plain numbers: \"3600\"\n *  - simple math expressions with digits and + - * / ( ) and spaces: \"30 * 24 * 60 * 60\"\n *  - unit suffixes: s (seconds), m (minutes), h (hours), d (days), w (weeks). Examples: \"30d\", \"15m\"\n *\n * The expression evaluator is guarded with a regex to only allow numeric characters and math operators.\n */\n\nimport parseEnvSeconds from \"./tokenExpirationParser.js\";\n\nexport const config = {\n  port: process.env.PORT || 3001,\n  nodeEnv: process.env.NODE_ENV || \"development\",\n  databaseUrl: process.env.POSTGRES_PRISMA_URL || \"\",\n  jwtSecret: process.env.JWT_SECRET || \"your_jwt_secret\",\n  jwtExpiration: parseEnvSeconds(process.env.JWT_EXPIRATION, 30 * 24 * 60 * 60), // seconds\n} as const;\n\nexport default config;\n"]}
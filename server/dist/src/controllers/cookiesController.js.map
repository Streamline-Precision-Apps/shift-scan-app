{"version":3,"file":"cookiesController.js","sources":["src/controllers/cookiesController.ts"],"sourceRoot":"/","sourcesContent":["// GET /api/cookies?name=key\nimport express from \"express\";\n\nexport function getCookie(req: express.Request, res: express.Response) {\n  let { name } = req.query;\n  if (!name) {\n    return res.status(400).json({ error: \"Missing cookie name\" });\n  }\n  if (Array.isArray(name)) name = name[0];\n  if (typeof name !== \"string\") {\n    return res.status(400).json({ error: \"Invalid cookie name\" });\n  }\n  const value = req.cookies?.[name];\n  if (value === undefined) {\n    if (name === \"currentPageView\") {\n      return res.status(200).json({ value: \"\" });\n    }\n    return res.status(404).json({ error: \"Cookie not found\" });\n  }\n  res.json({ value });\n}\n\n// POST or PUT /api/cookies { name, value, options }\nexport function setCookie(req: express.Request, res: express.Response) {\n  const { name, value, options } = req.body;\n  if (!name || value === undefined) {\n    return res.status(400).json({ error: \"Missing name or value\" });\n  }\n  res.cookie(name, value, options || {});\n  res.json({ message: \"Cookie set\", name, value });\n}\n\n// DELETE /api/cookies?name=key or /api/cookies (delete all)\nexport function deleteCookie(req: express.Request, res: express.Response) {\n  let { name } = req.query;\n  if (name) {\n    if (Array.isArray(name)) name = name[0];\n    if (typeof name === \"string\") {\n      res.clearCookie(name);\n      return res.json({ message: `Cookie '${name}' deleted` });\n    } else {\n      return res.status(400).json({ error: \"Invalid cookie name\" });\n    }\n  }\n  // Delete all cookies\n  if (req.cookies) {\n    Object.keys(req.cookies).forEach((cookieName) => {\n      res.clearCookie(cookieName);\n    });\n  }\n  res.json({ message: \"All cookies deleted\" });\n}\n"],"names":[],"mappings":"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","debug_id":"4c53e277-a75d-51c3-b519-4c70adb21f73"}
{"version":3,"file":"locationController.js","sources":["src/controllers/locationController.ts"],"sourceRoot":"/","sourcesContent":["import type { AuthenticatedRequest } from \"../middleware/authMiddleware.js\";\nimport type { Request, Response } from \"express\";\n\nimport {\n  fetchLatestLocation,\n  fetchLocationHistory,\n  saveUserLocation,\n  validateLocationPayload,\n} from \"../services/locationService.js\";\n\n\n// get the latest location for a user\nexport async function getUserLocations(\n  req: AuthenticatedRequest,\n  res: Response\n) {\n  const userId = req.user?.id || req.params.userId;\n  if (!userId) {\n    return res.status(400).json({ error: \"Missing userId\" });\n  }\n  try {\n    const location = await fetchLatestLocation(userId);\n    if (!location) {\n      return res.status(404).json({ error: \"No location found for user\" });\n    }\n    return res.json(location);\n  } catch (err) {\n    console.error(\"Error fetching user location:\", err);\n    return res.status(500).json({ error: \"Internal server error\" });\n  }\n}\n\n\n// fetch all locations for a user (for history)\nexport async function getUserLocationHistory(req: Request, res: Response) {\n  const userId = req.params.userId;\n  if (!userId) {\n    return res.status(400).json({ error: \"Missing userId\" });\n  }\n  try {\n    const locations = await fetchLocationHistory(userId);\n    return res.json(locations);\n  } catch (err) {\n    console.error(\"Error fetching user location history:\", err);\n    return res.status(500).json({ error: \"Internal server error\" });\n  }\n}\n\n\n// Handle POST location from client\nexport async function postUserLocation(\n  req: AuthenticatedRequest,\n  res: Response\n) {\n  const userId = req.user?.id;\n  if (!userId) {\n    return res.status(400).json({ error: \"Missing userId\" });\n  }\n  const { coords, device } = req.body;\n  const validationError = validateLocationPayload({ coords });\n  if (validationError) {\n    return res.status(400).json({ error: validationError });\n  }\n  try {\n    await saveUserLocation(userId, coords, device);\n    return res.status(201).json({ success: true });\n  } catch (err) {\n    console.error(\"Error posting user location:\", err);\n    return res.status(500).json({ error: \"Internal server error\" });\n  }\n}\n"],"names":[],"mappings":"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","debug_id":"a2ac1ec1-50e4-5fb7-90c8-2dce55eae585"}
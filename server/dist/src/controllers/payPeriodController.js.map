{"version":3,"file":"payPeriodController.js","sourceRoot":"/","sources":["src/controllers/payPeriodController.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,EAAE,kBAAkB,EAAE,MAAM,iCAAiC,CAAC;AAErE,MAAM,CAAC,MAAM,sBAAsB,GAAG,KAAK,EACzC,GAAoB,EACpB,GAAqB,EACrB,EAAE;IACF,8DAA8D;IAC9D,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC/B,IAAI,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE,CAAC;QAC1C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gCAAgC,EAAE,CAAC,CAAC;IAC3E,CAAC;IACD,IAAI,CAAC;QACH,MAAM,eAAe,GAAG,MAAM,kBAAkB,CAAC,MAAM,CAAC,CAAC;QACzD,GAAG,CAAC,SAAS,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;QAC3C,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC5B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;QAC1D,IAAI,YAAY,GAAG,mCAAmC,CAAC;QACvD,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;YAC3B,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;QAC/B,CAAC;QACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC;IAChD,CAAC;AACH,CAAC,CAAC","sourcesContent":["import express from \"express\";\nimport { getPayPeriodSheets } from \"../services/payPeriodService.js\";\n\nexport const payPeriodSheetsHandler = async (\n  req: express.Request,\n  res: express.Response\n) => {\n  // You may want to use authentication middleware in production\n  const userId = req.body.userId;\n  if (!userId || typeof userId !== \"string\") {\n    return res.status(401).json({ error: \"Unauthorized or missing userId\" });\n  }\n  try {\n    const payPeriodSheets = await getPayPeriodSheets(userId);\n    res.setHeader(\"Cache-Control\", \"no-store\");\n    res.json(payPeriodSheets);\n  } catch (error) {\n    console.error(\"Error fetching pay period sheets:\", error);\n    let errorMessage = \"Failed to fetch pay period sheets\";\n    if (error instanceof Error) {\n      errorMessage = error.message;\n    }\n    res.status(500).json({ error: errorMessage });\n  }\n};\n"]}
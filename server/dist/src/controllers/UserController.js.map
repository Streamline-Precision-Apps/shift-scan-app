{"version":3,"file":"userController.js","sourceRoot":"/","sources":["src/controllers/userController.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Request, Response } from \"express\";\nimport type { User, Prisma } from \"../../generated/prisma/index.js\";\nimport UserService from \"../services/UserService.js\";\n\n// Type the request body for create/update operations\ninterface CreateUserRequestBody {\n  firstName: string;\n  lastName: string;\n  username: string;\n  password: string;\n  companyId: string;\n  email?: string | null;\n  signature?: string | null;\n  DOB?: string | null;\n  truckView: boolean;\n  tascoView: boolean;\n  laborView: boolean;\n  mechanicView: boolean;\n  permission?: string;\n  image?: string | null;\n  startDate?: string | null;\n  terminationDate?: string | null;\n  workTypeId?: string | null;\n  middleName?: string | null;\n  secondLastName?: string | null;\n}\n\ninterface CreateUserRequest extends Request {\n  body: CreateUserRequestBody;\n}\n\ninterface UpdateUserRequest extends Request {\n  body: Prisma.UserUpdateInput;\n}\n\nexport class UserController {\n  // GET /api/users\n  static async getUsers(req: Request, res: Response) {\n    try {\n      const users = await UserService.getAllUsers();\n      // Remove password from each user object\n      const safeUsers = users.map(({ password, ...rest }) => rest);\n      res.status(200).json({\n        success: true,\n        data: safeUsers,\n        message: \"Users retrieved successfully\",\n      });\n    } catch (error) {\n      res.status(500).json({\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        message: \"Failed to retrieve users\",\n      });\n    }\n  }\n\n  // GET /api/users/:id\n  static async getUserById(req: Request, res: Response) {\n    try {\n      const { id } = req.params;\n      if (!id) {\n        return res.status(400).json({\n          success: false,\n          error: \"User ID is required\",\n          message: \"Failed to retrieve user\",\n        });\n      }\n      const user = await UserService.getUserById(id);\n      // Remove password from user object\n      const { password, ...safeUser } = user || {};\n      res.status(200).json({\n        success: true,\n        data: safeUser,\n        message: \"User retrieved successfully\",\n      });\n    } catch (error) {\n      const statusCode =\n        error instanceof Error && error.message.includes(\"not found\")\n          ? 404\n          : 500;\n      res.status(statusCode).json({\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        message: \"Failed to retrieve user\",\n      });\n    }\n  }\n\n  // POST /api/users\n  static async createUser(req: CreateUserRequest, res: Response) {\n    try {\n      // Convert request body to proper Prisma input\n      const userData = UserService.createUserWithCompanyId(\n        req.body as Prisma.UserCreateInput & { companyId: string }\n      );\n      const newUser: User = await UserService.createUser(userData);\n\n      res.status(201).json({\n        success: true,\n        data: newUser,\n        message: \"User created successfully\",\n      });\n    } catch (error) {\n      const statusCode =\n        error instanceof Error && error.message.includes(\"already exists\")\n          ? 409\n          : 400;\n      res.status(statusCode).json({\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        message: \"Failed to create user\",\n      });\n    }\n  }\n\n  // PUT /api/users/:id\n  static async updateUser(req: Request, res: Response) {\n    try {\n      const { id } = req.params;\n      if (!id) {\n        return res.status(400).json({\n          success: false,\n          error: \"User ID is required\",\n          message: \"Failed to update user\",\n        });\n      }\n      const userData = req.body;\n      // Convert string 'true'/'false' to boolean for accountSetup if present in body\n      if (userData.accountSetup !== undefined) {\n        if (userData.accountSetup === \"true\") userData.accountSetup = true;\n        else if (userData.accountSetup === \"false\")\n          userData.accountSetup = false;\n      }\n      const updatedUser = await UserService.updateUser(id, userData);\n      res.status(200).json({\n        success: true,\n        data: updatedUser,\n        message: \"User updated successfully\",\n      });\n    } catch (error) {\n      let statusCode = 500;\n      if (error instanceof Error) {\n        if (error.message.includes(\"not found\")) statusCode = 404;\n        else if (error.message.includes(\"already taken\")) statusCode = 409;\n        else if (\n          error.message.includes(\"required\") ||\n          error.message.includes(\"Invalid\")\n        )\n          statusCode = 400;\n      }\n      res.status(statusCode).json({\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        message: \"Failed to update user\",\n      });\n    }\n  }\n\n  // DELETE /api/users/:id\n  static async deleteUser(req: Request, res: Response) {\n    try {\n      const { id } = req.params;\n      if (!id) {\n        return res.status(400).json({\n          success: false,\n          error: \"User ID is required\",\n          message: \"Failed to delete user\",\n        });\n      }\n      await UserService.deleteUser(id);\n\n      res.status(200).json({\n        success: true,\n        message: \"User deleted successfully\",\n      });\n    } catch (error) {\n      const statusCode =\n        error instanceof Error && error.message.includes(\"not found\")\n          ? 404\n          : 500;\n      res.status(statusCode).json({\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        message: \"Failed to delete user\",\n      });\n    }\n  }\n\n  // PUT /api/user/settings\n  static async updateSettings(req: Request, res: Response) {\n    try {\n      const { userId, ...settings } = req.body;\n      if (!userId) {\n        return res.status(400).json({\n          success: false,\n          error: \"User ID is required\",\n          message: \"Failed to update user settings\",\n        });\n      }\n\n      // Update User email if provided\n      if (settings.email !== undefined) {\n        await UserService.updateUser(userId, { email: settings.email });\n      }\n\n      // Update Contacts info if provided\n      if (\n        settings.phoneNumber !== undefined ||\n        settings.emergencyContact !== undefined ||\n        settings.emergencyContactNumber !== undefined\n      ) {\n        // Assume UserService.updateContact exists, otherwise implement as needed\n        if (UserService.updateContact) {\n          await UserService.updateContact(userId, {\n            phoneNumber: settings.phoneNumber,\n            emergencyContact: settings.emergencyContact,\n            emergencyContactNumber: settings.emergencyContactNumber,\n          });\n        }\n      }\n\n      // Update UserSettings if any settings provided\n      const userSettingsFields = [\n        \"language\",\n        \"generalReminders\",\n        \"personalReminders\",\n        \"cameraAccess\",\n        \"locationAccess\",\n        \"cookiesAccess\",\n      ];\n      const hasSettings = userSettingsFields.some(\n        (key) => settings[key] !== undefined\n      );\n      if (hasSettings && UserService.updateUserSettings) {\n        // Sanitize boolean values\n        const sanitizedSettings = { ...settings };\n        if (sanitizedSettings.cameraAccess !== undefined) {\n          sanitizedSettings.cameraAccess = Boolean(sanitizedSettings.cameraAccess);\n        }\n        if (sanitizedSettings.locationAccess !== undefined) {\n          sanitizedSettings.locationAccess = Boolean(sanitizedSettings.locationAccess);\n        }\n        if (sanitizedSettings.personalReminders !== undefined) {\n          sanitizedSettings.personalReminders = Boolean(sanitizedSettings.personalReminders);\n        }\n        if (sanitizedSettings.generalReminders !== undefined) {\n          sanitizedSettings.generalReminders = Boolean(sanitizedSettings.generalReminders);\n        }\n        if (sanitizedSettings.cookiesAccess !== undefined) {\n          sanitizedSettings.cookiesAccess = Boolean(sanitizedSettings.cookiesAccess);\n        }\n        await UserService.updateUserSettings(userId, sanitizedSettings);\n      }\n\n      res.status(200).json({\n        success: true,\n        message: \"User settings updated successfully\",\n      });\n    } catch (error) {\n      res.status(500).json({\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        message: \"Failed to update user settings\",\n      });\n    }\n  }\n}\n\nexport const getUsers = UserController.getUsers;\nexport const getUserById = UserController.getUserById;\nexport const createUser = UserController.createUser;\nexport const updateUser = UserController.updateUser;\nexport const deleteUser = UserController.deleteUser;\nexport const updateSettings = UserController.updateSettings;\n"]}
{"version":3,"file":"errorMiddleware.js","sources":["src/middleware/errorMiddleware.ts"],"sourceRoot":"/","sourcesContent":["import type { Request, Response, NextFunction } from \"express\";\n\n// Error handling middleware\nexport function routeErrorHandler(error: unknown, message?: string): void {\n  if (message) {\n    console.error(message);\n  }\n  if (error instanceof Error) {\n    console.error(error.stack || error.message);\n  } else {\n    console.error(error);\n  }\n}\n\nexport function errorHandler(\n  err: unknown,\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  // Log error\n  if (err instanceof Error) {\n    console.error(err.stack || err.message);\n  } else {\n    console.error(err);\n  }\n  // Respond with error\n  res.status(500).json({\n    success: false,\n    error: err instanceof Error ? err.message : String(err),\n    message: \"Internal server error\",\n  });\n}\n\n// 404 handler\nexport const notFoundHandler = (req: Request, res: Response) => {\n  res.status(404).json({\n    success: false,\n    error: \"Route not found\",\n    message: `Cannot ${req.method} ${req.path}`,\n    availableRoutes: {\n      users: {\n        \"GET /api/users\": \"Get all users\",\n        \"GET /api/users/:id\": \"Get user by ID\",\n        \"POST /api/users\": \"Create new user\",\n        \"PUT /api/users/:id\": \"Update user\",\n        \"DELETE /api/users/:id\": \"Delete user\",\n      },\n      posts: {\n        \"GET /api/posts\": \"Get all posts\",\n        \"GET /api/posts/:id\": \"Get post by ID\",\n        \"GET /api/posts/author/:authorId\": \"Get posts by author\",\n        \"POST /api/posts\": \"Create new post\",\n        \"PUT /api/posts/:id\": \"Update post\",\n        \"DELETE /api/posts/:id\": \"Delete post\",\n        \"PATCH /api/posts/:id/toggle-published\": \"Toggle post published status\",\n      },\n    },\n  });\n};\n\n// Request validation middleware\nexport const validateJsonMiddleware = (\n  error: Error,\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  if (error instanceof SyntaxError && \"body\" in error) {\n    return res.status(400).json({\n      success: false,\n      error: \"Invalid JSON in request body\",\n      message: \"Please check your request body format\",\n    });\n  }\n  next(error);\n};\n"],"names":[],"mappings":"AAEA,4BAA4B;;;AAC5B,MAAM,UAAU,iBAAiB,CAAC,KAAc,EAAE,OAAgB;IAChE,IAAI,OAAO,EAAE,CAAC;QACZ,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;IACD,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;QAC3B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;SAAM,CAAC;QACN,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;AACH,CAAC;AAED,MAAM,UAAU,YAAY,CAC1B,GAAY,EACZ,GAAY,EACZ,GAAa,EACb,IAAkB;IAElB,YAAY;IACZ,IAAI,GAAG,YAAY,KAAK,EAAE,CAAC;QACzB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;SAAM,CAAC;QACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,qBAAqB;IACrB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QACnB,OAAO,EAAE,KAAK;QACd,KAAK,EAAE,GAAG,YAAY,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;QACvD,OAAO,EAAE,uBAAuB;KACjC,CAAC,CAAC;AACL,CAAC;AAED,cAAc;AACd,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IAC7D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QACnB,OAAO,EAAE,KAAK;QACd,KAAK,EAAE,iBAAiB;QACxB,OAAO,EAAE,UAAU,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,IAAI,EAAE;QAC3C,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,gBAAgB,EAAE,eAAe;gBACjC,oBAAoB,EAAE,gBAAgB;gBACtC,iBAAiB,EAAE,iBAAiB;gBACpC,oBAAoB,EAAE,aAAa;gBACnC,uBAAuB,EAAE,aAAa;aACvC;YACD,KAAK,EAAE;gBACL,gBAAgB,EAAE,eAAe;gBACjC,oBAAoB,EAAE,gBAAgB;gBACtC,iCAAiC,EAAE,qBAAqB;gBACxD,iBAAiB,EAAE,iBAAiB;gBACpC,oBAAoB,EAAE,aAAa;gBACnC,uBAAuB,EAAE,aAAa;gBACtC,uCAAuC,EAAE,8BAA8B;aACxE;SACF;KACF,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,gCAAgC;AAChC,MAAM,CAAC,MAAM,sBAAsB,GAAG,CACpC,KAAY,EACZ,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;IACF,IAAI,KAAK,YAAY,WAAW,IAAI,MAAM,IAAI,KAAK,EAAE,CAAC;QACpD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAC1B,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,8BAA8B;YACrC,OAAO,EAAE,uCAAuC;SACjD,CAAC,CAAC;IACL,CAAC;IACD,IAAI,CAAC,KAAK,CAAC,CAAC;AACd,CAAC,CAAC","debug_id":"147fabb7-8f0e-5ae5-abee-aa258a20b24c"}
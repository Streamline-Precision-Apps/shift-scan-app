{"version":3,"file":"authRoutes.js","sourceRoot":"/","sources":["src/routes/authRoutes.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,kCAAkC,CAAC;AAC1E,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAE9B,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAEhC;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AACH,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AAEjC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;AAErC,eAAe,MAAM,CAAC","sourcesContent":["import express from \"express\";\nimport { loginUser, signOutUser } from \"../controllers/authController.js\";\nimport { sign } from \"crypto\";\n\nconst router = express.Router();\n\n/**\n * @swagger\n * /auth/login:\n *   post:\n *     summary: Log in to get a JWT token\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - username\n *               - password\n *             properties:\n *               username:\n *                 type: string\n *               password:\n *                 type: string\n *     responses:\n *       200:\n *         description: Successful login\n *       401:\n *         description: Invalid credentials\n */\nrouter.post(\"/login\", loginUser);\n\nrouter.post(\"/signout\", signOutUser);\n\nexport default router;\n"]}
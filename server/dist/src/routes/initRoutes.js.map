{"version":3,"file":"initRoutes.js","sources":["src/routes/initRoutes.ts"],"sourceRoot":"/","sourcesContent":["import { Router } from \"express\";\nimport { initHandler } from \"../controllers/initController.js\";\nimport { payPeriodSheetsHandler } from \"../controllers/payPeriodController.js\";\n\nconst router = Router();\n// Define your init routes here\n\n/**\n * @swagger\n * /api/v1/init:\n *   post:\n *     summary: Initialize user session and get user info\n *     description: Returns user information and settings for a given userId.\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               token:\n *                 type: string\n *                 description: JWT token for authentication\n *               userId:\n *                 type: string\n *                 description: User ID to fetch info for\n *             required:\n *               - token\n *               - userId\n *     responses:\n *       '200':\n *         description: User info and settings\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 user:\n *                   type: object\n *                   description: User data (excluding password)\n *       '400':\n *         description: Missing userId\n *       '404':\n *         description: User not found\n *       '500':\n *         description: Server error\n */\n\nrouter.post(\"/init\", initHandler);\n\n/**\n * @swagger\n * /api/v1/pay-period-timesheets:\n *   post:\n *     summary: Get pay period timesheets for a user\n *     description: Returns timesheets for the current pay period for the given userId.\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               userId:\n *                 type: string\n *                 description: User ID to fetch timesheets for\n *             required:\n *               - userId\n *     responses:\n *       '200':\n *         description: Pay period timesheets\n *         content:\n *           application/json:\n *             schema:\n *               type: array\n *               items:\n *                 type: object\n *                 properties:\n *                   id:\n *                     type: string\n *                   startTime:\n *                     type: string\n *                     format: date-time\n *                   endTime:\n *                     type: string\n *                     format: date-time\n *       '401':\n *         description: Unauthorized or missing userId\n *       '500':\n *         description: Server error\n */\nrouter.post(\"/pay-period-timesheets\", payPeriodSheetsHandler);\n\nexport default router;\n"],"names":[],"mappings":";;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,EAAE,WAAW,EAAE,MAAM,kCAAkC,CAAC;AAC/D,OAAO,EAAE,sBAAsB,EAAE,MAAM,uCAAuC,CAAC;AAE/E,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC;AACxB,+BAA+B;AAE/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuCG;AAEH,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AAElC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwCG;AACH,MAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE,sBAAsB,CAAC,CAAC;AAE9D,eAAe,MAAM,CAAC","debug_id":"1e94baae-b188-570b-8f0b-3bfae076ccd7"}
{"version":3,"file":"tokenRoutes.js","sourceRoot":"/","sources":["src/routes/tokenRoutes.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,EAAE,WAAW,EAAE,MAAM,iCAAiC,CAAC;AAC9D,OAAO,EACL,YAAY,EACZ,oBAAoB,EACpB,aAAa,EACb,gBAAgB,EAChB,gBAAgB,GACjB,MAAM,mCAAmC,CAAC;AAE3C,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC;AAExB,iDAAiD;AACjD,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;AAE/C,wDAAwD;AACxD;;;;GAIG;AACH,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,CAAC;AAErD;;;;GAIG;AACH,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,aAAa,CAAC,CAAC;AAE9C;;;GAGG;AACH,MAAM,CAAC,GAAG,CAAC,4BAA4B,EAAE,gBAAgB,CAAC,CAAC;AAE3D;;;GAGG;AACH,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;AAEjD,eAAe,MAAM,CAAC","sourcesContent":["import { Router } from \"express\";\nimport { verifyToken } from \"../middleware/authMiddleware.js\";\nimport {\n  saveFCMToken,\n  requestPasswordReset,\n  resetPassword,\n  verifyResetToken,\n  deleteResetToken,\n} from \"../controllers/tokenController.js\";\n\nconst router = Router();\n\n// FCM token management (requires authentication)\nrouter.post(\"/fcm\", verifyToken, saveFCMToken);\n\n// Password reset endpoints (no authentication required)\n/**\n * POST /api/tokens/password-reset\n * Request a password reset email\n * Body: { email: string }\n */\nrouter.post(\"/password-reset\", requestPasswordReset);\n\n/**\n * POST /api/tokens/reset-password\n * Reset the password using a valid reset token\n * Body: { token: string, password: string }\n */\nrouter.post(\"/reset-password\", resetPassword);\n\n/**\n * GET /api/tokens/verify-reset-token/:token\n * Verify if a reset token is valid\n */\nrouter.get(\"/verify-reset-token/:token\", verifyResetToken);\n\n/**\n * DELETE /api/tokens/reset/:token\n * Delete a password reset token\n */\nrouter.delete(\"/reset/:token\", deleteResetToken);\n\nexport default router;\n"]}
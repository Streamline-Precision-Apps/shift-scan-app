{"version":3,"file":"notificationsRoute.js","sourceRoot":"/","sources":["src/routes/notificationsRoute.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,EAAE,WAAW,EAAE,MAAM,iCAAiC,CAAC;AAC9D,OAAO,EACL,gBAAgB,EAChB,yBAAyB,EACzB,MAAM,GACP,MAAM,0CAA0C,CAAC;AAClD,OAAO,EAAE,kBAAkB,EAAE,MAAM,qCAAqC,CAAC;AAEzE,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC;AAGxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+CG;AACH,MAAM,CAAC,IAAI,CACT,iBAAiB,EACjB,WAAW,EACX,kBAAkB,EAClB,yBAAyB,CAC1B,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6CG;AACH,MAAM,CAAC,IAAI,CACT,oBAAoB,EACpB,WAAW,EACX,kBAAkB,EAClB,gBAAgB,CACjB,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyDG;AACH,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,kBAAkB,EAAE,MAAM,CAAC,CAAC;AAEhE,eAAe,MAAM,CAAC","sourcesContent":["import { Router } from \"express\";\nimport { verifyToken } from \"../middleware/authMiddleware.js\";\nimport {\n  sendNotification,\n  sendNotificationMulticast,\n  topics,\n} from \"../controllers/notificationController.js\";\nimport { requireFirebaseEnv } from \"../middleware/requireFirebaseEnv.js\";\n\nconst router = Router();\n\n\n/**\n * @swagger\n * /api/notifications/send-multicast:\n *   post:\n *     tags:\n *       - Notifications\n *     summary: Send notification to a topic (multicast)\n *     description: Send a notification to all users subscribed to a topic. Stores the notification in the database.\n *     security:\n *       - bearerAuth: []\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               topic:\n *                 type: string\n *               title:\n *                 type: string\n *               message:\n *                 type: string\n *               link:\n *                 type: string\n *               referenceId:\n *                 type: string\n *     responses:\n *       200:\n *         description: Notification sent successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 messageId:\n *                   type: string\n *                 success:\n *                   type: boolean\n *                 sentToTopic:\n *                   type: string\n *       400:\n *         description: Bad request\n *       401:\n *         description: Unauthorized\n *       500:\n *         description: Server error\n */\nrouter.post(\n  \"/send-multicast\",\n  verifyToken,\n  requireFirebaseEnv,\n  sendNotificationMulticast\n);\n\n/**\n * @swagger\n * /api/notifications/send-notification:\n *   post:\n *     tags:\n *       - Notifications\n *     summary: Send notification to a device\n *     description: Send a notification to a specific device token. Stores the notification in the database.\n *     security:\n *       - bearerAuth: []\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               token:\n *                 type: string\n *               title:\n *                 type: string\n *               message:\n *                 type: string\n *               link:\n *                 type: string\n *               topic:\n *                 type: string\n *     responses:\n *       200:\n *         description: Notification sent successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 message:\n *                   type: string\n *       400:\n *         description: Bad request\n *       401:\n *         description: Unauthorized\n *       500:\n *         description: Server error\n */\nrouter.post(\n  \"/send-notification\",\n  verifyToken,\n  requireFirebaseEnv,\n  sendNotification\n);\n\n/**\n * @swagger\n * /api/notifications/topics:\n *   post:\n *     tags:\n *       - Notifications\n *     summary: Subscribe or unsubscribe device to topics\n *     description: Subscribe or unsubscribe a device token to one or more topics. Optionally records topic subscriptions in the database.\n *     security:\n *       - bearerAuth: []\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               action:\n *                 type: string\n *                 enum: [subscribe, unsubscribe]\n *               topics:\n *                 type: array\n *                 items:\n *                   type: string\n *               token:\n *                 type: string\n *               userId:\n *                 type: string\n *     responses:\n *       200:\n *         description: Topics processed successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 message:\n *                   type: string\n *                 results:\n *                   type: array\n *                   items:\n *                     type: object\n *                     properties:\n *                       topic:\n *                         type: string\n *                       success:\n *                         type: boolean\n *                       failureCount:\n *                         type: integer\n *       400:\n *         description: Bad request\n *       401:\n *         description: Unauthorized\n *       500:\n *         description: Server error\n */\nrouter.post(\"/topics\", verifyToken, requireFirebaseEnv, topics);\n\nexport default router;\n"]}

/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  addressId: 'addressId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  SubscriptionDate: 'SubscriptionDate'
};

exports.Prisma.CostCodeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  code: 'code'
};

exports.Prisma.CCTagScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.CrewScalarFieldEnum = {
  id: 'id',
  name: 'name',
  leadId: 'leadId',
  crewType: 'crewType',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PdfDocumentScalarFieldEnum = {
  id: 'id',
  qrId: 'qrId',
  fileName: 'fileName',
  description: 'description',
  fileData: 'fileData',
  contentType: 'contentType',
  size: 'size',
  isActive: 'isActive',
  createdAt: 'createdAt',
  uploadDate: 'uploadDate'
};

exports.Prisma.DocumentTagScalarFieldEnum = {
  id: 'id',
  tagName: 'tagName'
};

exports.Prisma.EquipmentScalarFieldEnum = {
  id: 'id',
  qrId: 'qrId',
  name: 'name',
  description: 'description',
  creationReason: 'creationReason',
  equipmentTag: 'equipmentTag',
  state: 'state',
  approvalStatus: 'approvalStatus',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  overWeight: 'overWeight',
  currentWeight: 'currentWeight',
  createdById: 'createdById',
  createdVia: 'createdVia',
  acquiredDate: 'acquiredDate',
  code: 'code',
  color: 'color',
  licensePlate: 'licensePlate',
  licenseState: 'licenseState',
  make: 'make',
  memo: 'memo',
  model: 'model',
  ownershipType: 'ownershipType',
  registrationExpiration: 'registrationExpiration',
  serialNumber: 'serialNumber',
  year: 'year',
  acquiredCondition: 'acquiredCondition',
  status: 'status'
};

exports.Prisma.EmployeeEquipmentLogScalarFieldEnum = {
  id: 'id',
  equipmentId: 'equipmentId',
  maintenanceId: 'maintenanceId',
  startTime: 'startTime',
  endTime: 'endTime',
  comment: 'comment',
  timeSheetId: 'timeSheetId',
  rental: 'rental'
};

exports.Prisma.FormTemplateScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isSignatureRequired: 'isSignatureRequired',
  description: 'description',
  isActive: 'isActive',
  formType: 'formType',
  isApprovalRequired: 'isApprovalRequired'
};

exports.Prisma.FormGroupingScalarFieldEnum = {
  id: 'id',
  title: 'title',
  order: 'order'
};

exports.Prisma.FormFieldScalarFieldEnum = {
  id: 'id',
  formGroupingId: 'formGroupingId',
  label: 'label',
  type: 'type',
  required: 'required',
  order: 'order',
  placeholder: 'placeholder',
  maxLength: 'maxLength',
  content: 'content',
  filter: 'filter',
  minLength: 'minLength',
  multiple: 'multiple'
};

exports.Prisma.FormFieldOptionScalarFieldEnum = {
  id: 'id',
  fieldId: 'fieldId',
  value: 'value'
};

exports.Prisma.FormSubmissionScalarFieldEnum = {
  title: 'title',
  formTemplateId: 'formTemplateId',
  userId: 'userId',
  formType: 'formType',
  data: 'data',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  submittedAt: 'submittedAt',
  status: 'status',
  id: 'id'
};

exports.Prisma.FormApprovalScalarFieldEnum = {
  id: 'id',
  signedBy: 'signedBy',
  submittedAt: 'submittedAt',
  updatedAt: 'updatedAt',
  signature: 'signature',
  comment: 'comment',
  formSubmissionId: 'formSubmissionId'
};

exports.Prisma.JobsiteScalarFieldEnum = {
  id: 'id',
  qrId: 'qrId',
  name: 'name',
  description: 'description',
  creationReason: 'creationReason',
  approvalStatus: 'approvalStatus',
  addressId: 'addressId',
  comment: 'comment',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  archiveDate: 'archiveDate',
  createdById: 'createdById',
  createdVia: 'createdVia',
  code: 'code',
  latitude: 'latitude',
  longitude: 'longitude',
  radiusMeters: 'radiusMeters',
  status: 'status'
};

exports.Prisma.ReportScalarFieldEnum = {
  name: 'name',
  description: 'description',
  companyId: 'companyId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  parameters: 'parameters',
  visibility: 'visibility',
  tags: 'tags',
  id: 'id'
};

exports.Prisma.ReportRunScalarFieldEnum = {
  id: 'id',
  runAt: 'runAt',
  status: 'status',
  results: 'results',
  duration: 'duration',
  startDate: 'startDate',
  endDate: 'endDate',
  customParams: 'customParams',
  exportFormats: 'exportFormats',
  lastExportedAt: 'lastExportedAt',
  reportId: 'reportId'
};

exports.Prisma.TimeSheetScalarFieldEnum = {
  date: 'date',
  userId: 'userId',
  jobsiteId: 'jobsiteId',
  costcode: 'costcode',
  nu: 'nu',
  Fp: 'Fp',
  startTime: 'startTime',
  endTime: 'endTime',
  comment: 'comment',
  statusComment: 'statusComment',
  location: 'location',
  status: 'status',
  workType: 'workType',
  editedByUserId: 'editedByUserId',
  newTimeSheetId: 'newTimeSheetId',
  createdByAdmin: 'createdByAdmin',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  clockInLat: 'clockInLat',
  clockInLng: 'clockInLng',
  clockOutLat: 'clockOutLat',
  clockOutLng: 'clockOutLng',
  withinFenceIn: 'withinFenceIn',
  withinFenceOut: 'withinFenceOut',
  wasInjured: 'wasInjured',
  id: 'id'
};

exports.Prisma.MechanicProjectsScalarFieldEnum = {
  id: 'id',
  timeSheetId: 'timeSheetId',
  hours: 'hours',
  equipmentId: 'equipmentId',
  description: 'description'
};

exports.Prisma.MaintenanceLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  maintenanceId: 'maintenanceId',
  startTime: 'startTime',
  endTime: 'endTime',
  comment: 'comment',
  timeSheetId: 'timeSheetId'
};

exports.Prisma.MaintenanceScalarFieldEnum = {
  id: 'id',
  equipmentId: 'equipmentId',
  equipmentIssue: 'equipmentIssue',
  employeeEquipmentLogId: 'employeeEquipmentLogId',
  additionalInfo: 'additionalInfo',
  location: 'location',
  problemDiagnosis: 'problemDiagnosis',
  solution: 'solution',
  totalHoursLaboured: 'totalHoursLaboured',
  createdAt: 'createdAt',
  priority: 'priority',
  delay: 'delay',
  delayReasoning: 'delayReasoning',
  repaired: 'repaired',
  selected: 'selected',
  hasBeenDelayed: 'hasBeenDelayed',
  createdBy: 'createdBy'
};

exports.Prisma.TascoLogScalarFieldEnum = {
  id: 'id',
  shiftType: 'shiftType',
  equipmentId: 'equipmentId',
  laborType: 'laborType',
  materialType: 'materialType',
  LoadQuantity: 'LoadQuantity',
  screenType: 'screenType',
  timeSheetId: 'timeSheetId'
};

exports.Prisma.TascoMaterialTypesScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.TruckingLogScalarFieldEnum = {
  id: 'id',
  laborType: 'laborType',
  taskName: 'taskName',
  equipmentId: 'equipmentId',
  startingMileage: 'startingMileage',
  endingMileage: 'endingMileage',
  truckLaborLogId: 'truckLaborLogId',
  trailerNumber: 'trailerNumber',
  truckNumber: 'truckNumber',
  timeSheetId: 'timeSheetId'
};

exports.Prisma.StateMileageScalarFieldEnum = {
  id: 'id',
  truckingLogId: 'truckingLogId',
  state: 'state',
  stateLineMileage: 'stateLineMileage'
};

exports.Prisma.MaterialScalarFieldEnum = {
  id: 'id',
  truckingLogId: 'truckingLogId',
  LocationOfMaterial: 'LocationOfMaterial',
  name: 'name',
  quantity: 'quantity',
  materialWeight: 'materialWeight',
  loadType: 'loadType',
  createdAt: 'createdAt',
  unit: 'unit'
};

exports.Prisma.RefuelLogScalarFieldEnum = {
  id: 'id',
  employeeEquipmentLogId: 'employeeEquipmentLogId',
  truckingLogId: 'truckingLogId',
  tascoLogId: 'tascoLogId',
  gallonsRefueled: 'gallonsRefueled',
  milesAtFueling: 'milesAtFueling'
};

exports.Prisma.EquipmentHauledScalarFieldEnum = {
  id: 'id',
  truckingLogId: 'truckingLogId',
  equipmentId: 'equipmentId',
  createdAt: 'createdAt',
  endMileage: 'endMileage',
  startMileage: 'startMileage',
  destination: 'destination',
  source: 'source'
};

exports.Prisma.TimeSheetChangeLogScalarFieldEnum = {
  id: 'id',
  timeSheetId: 'timeSheetId',
  changedBy: 'changedBy',
  changedAt: 'changedAt',
  changeReason: 'changeReason',
  changes: 'changes',
  wasStatusChange: 'wasStatusChange',
  numberOfChanges: 'numberOfChanges'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  username: 'username',
  email: 'email',
  password: 'password',
  signature: 'signature',
  DOB: 'DOB',
  truckView: 'truckView',
  tascoView: 'tascoView',
  laborView: 'laborView',
  mechanicView: 'mechanicView',
  permission: 'permission',
  image: 'image',
  startDate: 'startDate',
  terminationDate: 'terminationDate',
  accountSetup: 'accountSetup',
  clockedIn: 'clockedIn',
  companyId: 'companyId',
  passwordResetTokenId: 'passwordResetTokenId',
  workTypeId: 'workTypeId',
  middleName: 'middleName',
  secondLastName: 'secondLastName',
  lastSeen: 'lastSeen'
};

exports.Prisma.UserSettingsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  language: 'language',
  generalReminders: 'generalReminders',
  personalReminders: 'personalReminders',
  cameraAccess: 'cameraAccess',
  locationAccess: 'locationAccess',
  cookiesAccess: 'cookiesAccess',
  createdAt: 'createdAt',
  lastUpdated: 'lastUpdated'
};

exports.Prisma.ContactsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  phoneNumber: 'phoneNumber',
  emergencyContact: 'emergencyContact',
  emergencyContactNumber: 'emergencyContactNumber',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PasswordResetTokenScalarFieldEnum = {
  id: 'id',
  email: 'email',
  token: 'token',
  expiration: 'expiration'
};

exports.Prisma.AccountSetupTokenScalarFieldEnum = {
  id: 'id',
  code: 'code',
  userId: 'userId',
  expiresAt: 'expiresAt',
  used: 'used'
};

exports.Prisma.AddressScalarFieldEnum = {
  id: 'id',
  street: 'street',
  city: 'city',
  state: 'state',
  zipCode: 'zipCode',
  country: 'country'
};

exports.Prisma.FCMTokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  userId: 'userId',
  platform: 'platform',
  lastUsedAt: 'lastUsedAt',
  isValid: 'isValid',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TopicSubscriptionScalarFieldEnum = {
  id: 'id',
  topic: 'topic',
  createdAt: 'createdAt',
  userId: 'userId'
};

exports.Prisma.NotificationScalarFieldEnum = {
  topic: 'topic',
  title: 'title',
  body: 'body',
  url: 'url',
  metadata: 'metadata',
  createdAt: 'createdAt',
  pushedAt: 'pushedAt',
  pushAttempts: 'pushAttempts',
  readAt: 'readAt',
  id: 'id',
  referenceId: 'referenceId'
};

exports.Prisma.NotificationResponseScalarFieldEnum = {
  id: 'id',
  notificationId: 'notificationId',
  userId: 'userId',
  response: 'response',
  respondedAt: 'respondedAt'
};

exports.Prisma.NotificationReadScalarFieldEnum = {
  id: 'id',
  notificationId: 'notificationId',
  userId: 'userId',
  readAt: 'readAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Condition = exports.$Enums.Condition = {
  NEW: 'NEW',
  USED: 'USED'
};

exports.EquipmentState = exports.$Enums.EquipmentState = {
  AVAILABLE: 'AVAILABLE',
  IN_USE: 'IN_USE',
  MAINTENANCE: 'MAINTENANCE',
  NEEDS_REPAIR: 'NEEDS_REPAIR',
  RETIRED: 'RETIRED'
};

exports.EquipmentTags = exports.$Enums.EquipmentTags = {
  TRUCK: 'TRUCK',
  TRAILER: 'TRAILER',
  VEHICLE: 'VEHICLE',
  EQUIPMENT: 'EQUIPMENT'
};

exports.OwnershipType = exports.$Enums.OwnershipType = {
  OWNED: 'OWNED',
  LEASED: 'LEASED',
  RENTAL: 'RENTAL'
};

exports.materialUnit = exports.$Enums.materialUnit = {
  TONS: 'TONS',
  YARDS: 'YARDS'
};

exports.Permission = exports.$Enums.Permission = {
  USER: 'USER',
  MANAGER: 'MANAGER',
  ADMIN: 'ADMIN',
  SUPERADMIN: 'SUPERADMIN'
};

exports.IsActive = exports.$Enums.IsActive = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE'
};

exports.WorkType = exports.$Enums.WorkType = {
  MECHANIC: 'MECHANIC',
  TRUCK_DRIVER: 'TRUCK_DRIVER',
  LABOR: 'LABOR',
  TASCO: 'TASCO'
};

exports.Priority = exports.$Enums.Priority = {
  PENDING: 'PENDING',
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  TODAY: 'TODAY'
};

exports.LoadType = exports.$Enums.LoadType = {
  UNSCREENED: 'UNSCREENED',
  SCREENED: 'SCREENED'
};

exports.EquipmentUsageType = exports.$Enums.EquipmentUsageType = {
  TASCO: 'TASCO',
  TRUCKING: 'TRUCKING',
  MAINTENANCE: 'MAINTENANCE',
  LABOR: 'LABOR',
  GENERAL: 'GENERAL'
};

exports.ApprovalStatus = exports.$Enums.ApprovalStatus = {
  DRAFT: 'DRAFT',
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.ReportStatus = exports.$Enums.ReportStatus = {
  PENDING: 'PENDING',
  RUNNING: 'RUNNING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  CANCELED: 'CANCELED'
};

exports.ReportVisibility = exports.$Enums.ReportVisibility = {
  PRIVATE: 'PRIVATE',
  MANAGEMENT: 'MANAGEMENT',
  COMPANY: 'COMPANY'
};

exports.FormStatus = exports.$Enums.FormStatus = {
  DRAFT: 'DRAFT',
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  DENIED: 'DENIED'
};

exports.FormTemplateStatus = exports.$Enums.FormTemplateStatus = {
  DRAFT: 'DRAFT',
  ACTIVE: 'ACTIVE',
  ARCHIVED: 'ARCHIVED'
};

exports.ActiveStatus = exports.$Enums.ActiveStatus = {
  ACTIVE: 'ACTIVE',
  ARCHIVED: 'ARCHIVED'
};

exports.FieldType = exports.$Enums.FieldType = {
  TEXT: 'TEXT',
  TEXTAREA: 'TEXTAREA',
  NUMBER: 'NUMBER',
  DATE: 'DATE',
  DATE_TIME: 'DATE_TIME',
  TIME: 'TIME',
  DROPDOWN: 'DROPDOWN',
  CHECKBOX: 'CHECKBOX',
  HEADER: 'HEADER',
  PARAGRAPH: 'PARAGRAPH',
  MULTISELECT: 'MULTISELECT',
  RADIO: 'RADIO',
  SEARCH_PERSON: 'SEARCH_PERSON',
  SEARCH_ASSET: 'SEARCH_ASSET'
};

exports.AssetType = exports.$Enums.AssetType = {
  EQUIPMENT: 'EQUIPMENT',
  JOBSITES: 'JOBSITES',
  COST_CODES: 'COST_CODES',
  CLIENTS: 'CLIENTS'
};

exports.FormTemplateCategory = exports.$Enums.FormTemplateCategory = {
  GENERAL: 'GENERAL',
  MAINTENANCE: 'MAINTENANCE',
  SAFETY: 'SAFETY',
  INSPECTION: 'INSPECTION',
  INCIDENT: 'INCIDENT',
  FINANCE: 'FINANCE',
  OTHER: 'OTHER',
  HR: 'HR',
  OPERATIONS: 'OPERATIONS',
  COMPLIANCE: 'COMPLIANCE',
  CLIENTS: 'CLIENTS',
  IT: 'IT'
};

exports.CreatedVia = exports.$Enums.CreatedVia = {
  ADMIN: 'ADMIN',
  MOBILE: 'MOBILE'
};

exports.Prisma.ModelName = {
  Company: 'Company',
  CostCode: 'CostCode',
  CCTag: 'CCTag',
  Crew: 'Crew',
  PdfDocument: 'PdfDocument',
  DocumentTag: 'DocumentTag',
  Equipment: 'Equipment',
  EmployeeEquipmentLog: 'EmployeeEquipmentLog',
  FormTemplate: 'FormTemplate',
  FormGrouping: 'FormGrouping',
  FormField: 'FormField',
  FormFieldOption: 'FormFieldOption',
  FormSubmission: 'FormSubmission',
  FormApproval: 'FormApproval',
  Jobsite: 'Jobsite',
  Report: 'Report',
  ReportRun: 'ReportRun',
  TimeSheet: 'TimeSheet',
  mechanicProjects: 'mechanicProjects',
  MaintenanceLog: 'MaintenanceLog',
  Maintenance: 'Maintenance',
  TascoLog: 'TascoLog',
  TascoMaterialTypes: 'TascoMaterialTypes',
  TruckingLog: 'TruckingLog',
  StateMileage: 'StateMileage',
  Material: 'Material',
  RefuelLog: 'RefuelLog',
  EquipmentHauled: 'EquipmentHauled',
  TimeSheetChangeLog: 'TimeSheetChangeLog',
  User: 'User',
  UserSettings: 'UserSettings',
  Contacts: 'Contacts',
  PasswordResetToken: 'PasswordResetToken',
  AccountSetupToken: 'AccountSetupToken',
  Address: 'Address',
  FCMToken: 'FCMToken',
  TopicSubscription: 'TopicSubscription',
  Notification: 'Notification',
  NotificationResponse: 'NotificationResponse',
  NotificationRead: 'NotificationRead'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/devunfox/shift-scan-app/server/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/devunfox/shift-scan-app/server/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "POSTGRES_PRISMA_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "model Company {\n  id               String         @id @default(uuid())\n  name             String\n  addressId        String?\n  createdAt        DateTime       @default(now())\n  updatedAt        DateTime       @updatedAt\n  SubscriptionDate DateTime       @default(now())\n  Address          Address?       @relation(fields: [addressId], references: [id])\n  FormTemplates    FormTemplate[]\n  Reports          Report[]\n  Users            User[]\n}\n\nmodel CostCode {\n  id         String      @id @default(uuid())\n  name       String      @unique\n  isActive   Boolean     @default(true)\n  createdAt  DateTime    @default(now())\n  updatedAt  DateTime    @default(now()) @updatedAt\n  code       String?\n  Timesheets TimeSheet[]\n  CCTags     CCTag[]     @relation(\"CCTagToCostCode\")\n}\n\nmodel CCTag {\n  id          String     @id @default(uuid())\n  name        String     @unique\n  description String?\n  CostCodes   CostCode[] @relation(\"CCTagToCostCode\")\n  Jobsites    Jobsite[]  @relation(\"CCTagToJobsite\")\n}\n\nmodel Crew {\n  id        String   @id @default(uuid())\n  name      String\n  leadId    String\n  crewType  WorkType\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  Users     User[]   @relation(\"CrewToUser\")\n}\n\nmodel PdfDocument {\n  id           String        @id @default(uuid())\n  qrId         String        @unique\n  fileName     String\n  description  String?\n  fileData     Bytes\n  contentType  String        @default(\"application/pdf\")\n  size         Int\n  isActive     Boolean       @default(true)\n  createdAt    DateTime      @default(now())\n  uploadDate   DateTime      @default(now())\n  DocumentTags DocumentTag[] @relation(\"DocumentTagToPdfDocument\")\n\n  @@index([qrId])\n  @@index([fileName])\n}\n\nmodel DocumentTag {\n  id        String        @id @default(uuid())\n  tagName   String\n  Equipment Equipment[]   @relation(\"DocumentTagToEquipment\")\n  Documents PdfDocument[] @relation(\"DocumentTagToPdfDocument\")\n}\n\nmodel Equipment {\n  id                     String                 @id @default(uuid())\n  qrId                   String                 @unique\n  name                   String\n  description            String?\n  creationReason         String?\n  equipmentTag           EquipmentTags          @default(EQUIPMENT)\n  state                  EquipmentState         @default(AVAILABLE)\n  approvalStatus         ApprovalStatus         @default(PENDING)\n  createdAt              DateTime               @default(now())\n  updatedAt              DateTime               @updatedAt\n  overWeight             Boolean?               @default(false)\n  currentWeight          Float?                 @default(0)\n  createdById            String?\n  createdVia             CreatedVia             @default(MOBILE)\n  acquiredDate           DateTime?\n  code                   String?\n  color                  String?\n  licensePlate           String?\n  licenseState           String?\n  make                   String?\n  memo                   String?\n  model                  String?\n  ownershipType          OwnershipType?\n  registrationExpiration DateTime?\n  serialNumber           String?\n  year                   String?\n  acquiredCondition      Condition?\n  status                 FormTemplateStatus     @default(ACTIVE)\n  EmployeeEquipmentLogs  EmployeeEquipmentLog[]\n  createdBy              User?                  @relation(fields: [createdById], references: [id])\n  EquipmentHauled        EquipmentHauled[]\n  Maintenances           Maintenance[]\n  TascoLogs              TascoLog[]\n  HauledInLogs           TruckingLog[]          @relation(\"HauledEquipment\")\n  UsedAsTrailer          TruckingLog[]          @relation(\"TrailerEquipment\")\n  UsedAsTruck            TruckingLog[]          @relation(\"TruckEquipment\")\n  Maintenance            mechanicProjects[]\n  DocumentTags           DocumentTag[]          @relation(\"DocumentTagToEquipment\")\n\n  @@index([qrId])\n  @@index([status])\n  @@index([approvalStatus])\n}\n\nmodel EmployeeEquipmentLog {\n  id            String       @id @default(uuid())\n  equipmentId   String?\n  maintenanceId String?\n  startTime     DateTime     @default(now())\n  endTime       DateTime?\n  comment       String?\n  timeSheetId   Int\n  rental        Boolean      @default(false)\n  Equipment     Equipment?   @relation(fields: [equipmentId], references: [id])\n  Maintenance   Maintenance? @relation(fields: [maintenanceId], references: [id], onDelete: Cascade)\n  TimeSheet     TimeSheet    @relation(fields: [timeSheetId], references: [id], onDelete: Cascade)\n  RefuelLog     RefuelLog?\n\n  @@index([timeSheetId, equipmentId, maintenanceId])\n}\n\nenum Condition {\n  NEW\n  USED\n}\n\nenum EquipmentState {\n  AVAILABLE\n  IN_USE\n  MAINTENANCE\n  NEEDS_REPAIR\n  RETIRED\n}\n\nenum EquipmentTags {\n  TRUCK\n  TRAILER\n  VEHICLE\n  EQUIPMENT\n}\n\nenum OwnershipType {\n  OWNED\n  LEASED\n  RENTAL\n}\n\nmodel FormTemplate {\n  id                  String               @id @default(uuid())\n  companyId           String\n  name                String\n  createdAt           DateTime             @default(now())\n  updatedAt           DateTime             @updatedAt\n  isSignatureRequired Boolean              @default(false)\n  description         String?\n  isActive            FormTemplateStatus   @default(DRAFT)\n  formType            FormTemplateCategory @default(GENERAL)\n  isApprovalRequired  Boolean              @default(false)\n  Submissions         FormSubmission[]\n  Company             Company              @relation(fields: [companyId], references: [id])\n  FormGrouping        FormGrouping[]       @relation(\"FormGroupingToFormTemplate\")\n}\n\nmodel FormGrouping {\n  id           String         @id @default(uuid())\n  title        String?\n  order        Int\n  Fields       FormField[]\n  FormTemplate FormTemplate[] @relation(\"FormGroupingToFormTemplate\")\n}\n\nmodel FormField {\n  id             String            @id @default(uuid())\n  formGroupingId String\n  label          String\n  type           FieldType\n  required       Boolean           @default(false)\n  order          Int\n  placeholder    String?\n  maxLength      Int?\n  content        String?\n  filter         String?\n  minLength      Int?\n  multiple       Boolean?          @default(false)\n  FormGrouping   FormGrouping      @relation(fields: [formGroupingId], references: [id], onDelete: Cascade)\n  Options        FormFieldOption[]\n}\n\nmodel FormFieldOption {\n  id      String    @id @default(uuid())\n  fieldId String\n  value   String\n  Field   FormField @relation(fields: [fieldId], references: [id], onDelete: Cascade)\n}\n\nmodel FormSubmission {\n  title          String?\n  formTemplateId String\n  userId         String\n  formType       String?\n  data           Json?\n  createdAt      DateTime       @default(now())\n  updatedAt      DateTime       @updatedAt\n  submittedAt    DateTime?\n  status         FormStatus     @default(DRAFT)\n  id             Int            @id @default(autoincrement())\n  Approvals      FormApproval[]\n  FormTemplate   FormTemplate   @relation(fields: [formTemplateId], references: [id], onDelete: Cascade)\n  User           User           @relation(fields: [userId], references: [id])\n}\n\nmodel FormApproval {\n  id               String         @id @default(uuid())\n  signedBy         String?\n  submittedAt      DateTime       @default(now())\n  updatedAt        DateTime       @updatedAt\n  signature        String?\n  comment          String?\n  formSubmissionId Int\n  FormSubmission   FormSubmission @relation(fields: [formSubmissionId], references: [id], onDelete: Cascade)\n  Approver         User?          @relation(fields: [signedBy], references: [id])\n}\n\nmodel Jobsite {\n  id             String             @id @default(uuid())\n  qrId           String             @unique @default(uuid())\n  name           String\n  description    String\n  creationReason String?\n  approvalStatus ApprovalStatus     @default(PENDING)\n  addressId      String?\n  comment        String?\n  createdAt      DateTime           @default(now())\n  updatedAt      DateTime           @updatedAt\n  archiveDate    DateTime?\n  createdById    String?\n  createdVia     CreatedVia         @default(ADMIN)\n  code           String?\n  latitude       Float?\n  longitude      Float?\n  radiusMeters   Float?\n  status         FormTemplateStatus @default(ACTIVE)\n  Address        Address?           @relation(fields: [addressId], references: [id])\n  createdBy      User?              @relation(fields: [createdById], references: [id])\n  TimeSheets     TimeSheet[]\n  CCTags         CCTag[]            @relation(\"CCTagToJobsite\")\n\n  @@index([status])\n  @@index([qrId])\n}\n\nmodel Report {\n  name        String           @unique\n  description String\n  companyId   String\n  createdAt   DateTime         @default(now())\n  createdBy   String\n  updatedAt   DateTime         @updatedAt\n  parameters  Json?\n  visibility  ReportVisibility @default(PRIVATE)\n  tags        String[]\n  id          Int              @id\n  Company     Company          @relation(fields: [companyId], references: [id])\n  ReportRuns  ReportRun[]\n}\n\nmodel ReportRun {\n  id             String       @id @default(uuid())\n  runAt          DateTime     @default(now())\n  status         ReportStatus\n  results        Json?\n  duration       Int?\n  startDate      DateTime?\n  endDate        DateTime?\n  customParams   Json?\n  exportFormats  String[]\n  lastExportedAt DateTime?\n  reportId       Int\n  Report         Report       @relation(fields: [reportId], references: [id], onDelete: Cascade)\n}\n\nmodel TimeSheet {\n  date                  DateTime\n  userId                String\n  jobsiteId             String\n  costcode              String\n  nu                    String                 @default(\"nu\")\n  Fp                    String                 @default(\"fp\")\n  startTime             DateTime\n  endTime               DateTime?\n  comment               String?\n  statusComment         String?\n  location              String?\n  status                ApprovalStatus         @default(DRAFT)\n  workType              WorkType\n  editedByUserId        String?\n  newTimeSheetId        String?\n  createdByAdmin        Boolean                @default(false)\n  createdAt             DateTime               @default(now())\n  updatedAt             DateTime               @updatedAt\n  clockInLat            Float?\n  clockInLng            Float?\n  clockOutLat           Float?\n  clockOutLng           Float?\n  withinFenceIn         Boolean?\n  withinFenceOut        Boolean?\n  wasInjured            Boolean?               @default(false)\n  id                    Int                    @id @default(autoincrement())\n  EmployeeEquipmentLogs EmployeeEquipmentLog[]\n  MaintenanceLogs       MaintenanceLog[]\n  TascoLogs             TascoLog[]\n  CostCode              CostCode               @relation(fields: [costcode], references: [name])\n  Jobsite               Jobsite                @relation(fields: [jobsiteId], references: [id])\n  User                  User                   @relation(fields: [userId], references: [id], onDelete: Cascade)\n  ChangeLogs            TimeSheetChangeLog[]\n  TruckingLogs          TruckingLog[]\n  Maintenance           mechanicProjects[]\n}\n\nmodel mechanicProjects {\n  id          Int       @id @default(autoincrement())\n  timeSheetId Int\n  hours       Float?\n  equipmentId String\n  description String?\n  Equipment   Equipment @relation(fields: [equipmentId], references: [id])\n  TimeSheet   TimeSheet @relation(fields: [timeSheetId], references: [id], onDelete: Cascade)\n}\n\nmodel MaintenanceLog {\n  id            String      @id @default(uuid())\n  userId        String\n  maintenanceId String\n  startTime     DateTime\n  endTime       DateTime?\n  comment       String?\n  timeSheetId   Int\n  Maintenance   Maintenance @relation(fields: [maintenanceId], references: [id])\n  TimeSheet     TimeSheet   @relation(fields: [timeSheetId], references: [id], onDelete: Cascade)\n  User          User        @relation(fields: [userId], references: [id])\n}\n\nmodel Maintenance {\n  id                     String                 @id @default(uuid())\n  equipmentId            String\n  equipmentIssue         String?\n  employeeEquipmentLogId String?                @unique\n  additionalInfo         String?\n  location               String?\n  problemDiagnosis       String?\n  solution               String?\n  totalHoursLaboured     Float?\n  createdAt              DateTime               @default(now())\n  priority               Priority\n  delay                  DateTime?\n  delayReasoning         String?\n  repaired               Boolean                @default(false)\n  selected               Boolean                @default(false)\n  hasBeenDelayed         Boolean                @default(false)\n  createdBy              String?\n  EmployeeEquipmentLog   EmployeeEquipmentLog[]\n  Equipment              Equipment              @relation(fields: [equipmentId], references: [id])\n  MaintenanceLogs        MaintenanceLog[]\n}\n\nmodel TascoLog {\n  id                 String              @id @default(uuid())\n  shiftType          String\n  equipmentId        String?\n  laborType          String?\n  materialType       String?\n  LoadQuantity       Int                 @default(0)\n  screenType         LoadType?\n  timeSheetId        Int\n  RefuelLogs         RefuelLog[]\n  Equipment          Equipment?          @relation(fields: [equipmentId], references: [id])\n  TascoMaterialTypes TascoMaterialTypes? @relation(fields: [materialType], references: [name], onDelete: Cascade)\n  TimeSheet          TimeSheet           @relation(fields: [timeSheetId], references: [id], onDelete: Cascade)\n}\n\nmodel TascoMaterialTypes {\n  id       String     @id @default(uuid())\n  name     String     @unique\n  TascoLog TascoLog[]\n}\n\nmodel TruckingLog {\n  id              String            @id @default(uuid())\n  laborType       String\n  taskName        String?\n  equipmentId     String?\n  startingMileage Int?\n  endingMileage   Int?\n  truckLaborLogId String?\n  trailerNumber   String?\n  truckNumber     String?\n  timeSheetId     Int\n  EquipmentHauled EquipmentHauled[]\n  Materials       Material[]\n  RefuelLogs      RefuelLog[]\n  StateMileages   StateMileage[]\n  Equipment       Equipment?        @relation(\"HauledEquipment\", fields: [equipmentId], references: [id])\n  TimeSheet       TimeSheet         @relation(fields: [timeSheetId], references: [id], onDelete: Cascade)\n  Trailer         Equipment?        @relation(\"TrailerEquipment\", fields: [trailerNumber], references: [id])\n  Truck           Equipment?        @relation(\"TruckEquipment\", fields: [truckNumber], references: [id])\n}\n\nmodel StateMileage {\n  id               String      @id @default(uuid())\n  truckingLogId    String\n  state            String?\n  stateLineMileage Int?\n  TruckingLog      TruckingLog @relation(fields: [truckingLogId], references: [id], onDelete: Cascade)\n}\n\nmodel Material {\n  id                 String        @id @default(uuid())\n  truckingLogId      String\n  LocationOfMaterial String?\n  name               String?\n  quantity           Float?\n  materialWeight     Float?\n  loadType           LoadType?\n  createdAt          DateTime?     @default(now())\n  unit               materialUnit?\n  TruckingLog        TruckingLog   @relation(fields: [truckingLogId], references: [id], onDelete: Cascade)\n}\n\nmodel RefuelLog {\n  id                     String                @id @default(uuid())\n  employeeEquipmentLogId String?               @unique\n  truckingLogId          String?\n  tascoLogId             String?\n  gallonsRefueled        Float?\n  milesAtFueling         Int?\n  EmployeeEquipmentLog   EmployeeEquipmentLog? @relation(fields: [employeeEquipmentLogId], references: [id])\n  TascoLog               TascoLog?             @relation(fields: [tascoLogId], references: [id])\n  TruckingLog            TruckingLog?          @relation(fields: [truckingLogId], references: [id], onDelete: Cascade)\n}\n\nmodel EquipmentHauled {\n  id            String       @id @default(uuid())\n  truckingLogId String?\n  equipmentId   String?\n  createdAt     DateTime     @default(now())\n  endMileage    Int?\n  startMileage  Int?\n  destination   String?\n  source        String?\n  Equipment     Equipment?   @relation(fields: [equipmentId], references: [id])\n  TruckingLog   TruckingLog? @relation(fields: [truckingLogId], references: [id], onDelete: Cascade)\n}\n\nmodel TimeSheetChangeLog {\n  id              String    @id @default(uuid())\n  timeSheetId     Int\n  changedBy       String\n  changedAt       DateTime  @default(now())\n  changeReason    String?\n  changes         Json\n  wasStatusChange Boolean   @default(false)\n  numberOfChanges Int       @default(0)\n  User            User      @relation(\"ChangedByUser\", fields: [changedBy], references: [id])\n  TimeSheet       TimeSheet @relation(fields: [timeSheetId], references: [id], onDelete: Cascade)\n\n  @@index([timeSheetId])\n  @@index([changedBy])\n  @@index([changedAt])\n}\n\nenum materialUnit {\n  TONS\n  YARDS\n}\n\nmodel User {\n  id                   String                 @id @default(uuid())\n  firstName            String\n  lastName             String\n  username             String                 @unique\n  email                String?                @unique\n  password             String\n  signature            String?\n  DOB                  DateTime?\n  truckView            Boolean\n  tascoView            Boolean\n  laborView            Boolean\n  mechanicView         Boolean\n  permission           Permission             @default(USER)\n  image                String?\n  startDate            DateTime?              @default(now())\n  terminationDate      DateTime?\n  accountSetup         Boolean                @default(false)\n  clockedIn            Boolean                @default(false)\n  companyId            String\n  passwordResetTokenId String?\n  workTypeId           String?\n  middleName           String?\n  secondLastName       String?\n  lastSeen             DateTime?\n  accountSetupToken    AccountSetupToken?\n  Contact              Contacts?\n  Equipment            Equipment[]\n  FCMToken             FCMToken[]\n  FormApprovals        FormApproval[]\n  FormSubmissions      FormSubmission[]\n  Jobsite              Jobsite[]\n  MaintenanceLogs      MaintenanceLog[]\n  NotificationRead     NotificationRead[]\n  NotificationResponse NotificationResponse[]\n  PasswordResetTokens  PasswordResetToken[]\n  TimeSheets           TimeSheet[]\n  TimeSheetChanges     TimeSheetChangeLog[]   @relation(\"ChangedByUser\")\n  topicSubscriptions   TopicSubscription[]\n  Company              Company                @relation(fields: [companyId], references: [id])\n  UserSettings         UserSettings?\n  Crews                Crew[]                 @relation(\"CrewToUser\")\n\n  @@unique([firstName, lastName, username])\n  @@index([email])\n}\n\nmodel UserSettings {\n  id                String   @id @default(uuid())\n  userId            String   @unique\n  language          String   @default(\"en\")\n  generalReminders  Boolean  @default(false)\n  personalReminders Boolean  @default(false)\n  cameraAccess      Boolean  @default(false)\n  locationAccess    Boolean  @default(false)\n  cookiesAccess     Boolean  @default(false)\n  createdAt         DateTime @default(now())\n  lastUpdated       DateTime @default(now())\n  User              User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel Contacts {\n  id                     String   @id @default(uuid())\n  userId                 String   @unique @map(\"employeeId\")\n  phoneNumber            String?\n  emergencyContact       String?\n  emergencyContactNumber String?\n  createdAt              DateTime @default(now())\n  updatedAt              DateTime @updatedAt\n  User                   User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel PasswordResetToken {\n  id         String   @id @default(uuid())\n  email      String\n  token      String   @unique\n  expiration DateTime\n  User       User     @relation(fields: [email], references: [email])\n\n  @@unique([email, token])\n}\n\nmodel AccountSetupToken {\n  id        String   @id @default(uuid())\n  code      String\n  userId    String   @unique\n  expiresAt DateTime\n  used      Boolean  @default(false)\n  user      User     @relation(fields: [userId], references: [id])\n}\n\nmodel Address {\n  id      String    @id @default(uuid())\n  street  String\n  city    String\n  state   String\n  zipCode String\n  country String    @default(\"US\")\n  Company Company[]\n  Jobsite Jobsite[]\n\n  @@unique([street, city, state, zipCode], name: \"street_city_state_zipCode\")\n}\n\nenum Permission {\n  USER\n  MANAGER\n  ADMIN\n  SUPERADMIN\n}\n\nenum IsActive {\n  ACTIVE\n  INACTIVE\n}\n\nenum WorkType {\n  MECHANIC\n  TRUCK_DRIVER\n  LABOR\n  TASCO\n}\n\nenum Priority {\n  PENDING\n  LOW\n  MEDIUM\n  HIGH\n  TODAY\n}\n\nenum LoadType {\n  UNSCREENED\n  SCREENED\n}\n\nenum EquipmentUsageType {\n  TASCO\n  TRUCKING\n  MAINTENANCE\n  LABOR\n  GENERAL\n}\n\nenum ApprovalStatus {\n  DRAFT\n  PENDING\n  APPROVED\n  REJECTED\n}\n\nenum ReportStatus {\n  PENDING\n  RUNNING\n  COMPLETED\n  FAILED\n  CANCELED\n}\n\nenum ReportVisibility {\n  PRIVATE\n  MANAGEMENT\n  COMPANY\n}\n\nenum FormStatus {\n  DRAFT\n  PENDING\n  APPROVED\n  DENIED\n}\n\nenum FormTemplateStatus {\n  DRAFT\n  ACTIVE\n  ARCHIVED\n}\n\nenum ActiveStatus {\n  ACTIVE\n  ARCHIVED\n}\n\nenum FieldType {\n  TEXT\n  TEXTAREA\n  NUMBER\n  DATE\n  DATE_TIME\n  TIME\n  DROPDOWN\n  CHECKBOX\n  HEADER\n  PARAGRAPH\n  MULTISELECT\n  RADIO\n  SEARCH_PERSON\n  SEARCH_ASSET\n}\n\nenum AssetType {\n  EQUIPMENT\n  JOBSITES\n  COST_CODES\n  CLIENTS\n}\n\nenum FormTemplateCategory {\n  GENERAL\n  MAINTENANCE\n  SAFETY\n  INSPECTION\n  INCIDENT\n  FINANCE\n  OTHER\n  HR\n  OPERATIONS\n  COMPLIANCE\n  CLIENTS\n  IT\n}\n\nenum CreatedVia {\n  ADMIN\n  MOBILE\n}\n\nmodel FCMToken {\n  id         String    @id @default(cuid())\n  token      String    @unique\n  userId     String\n  platform   String?\n  lastUsedAt DateTime?\n  isValid    Boolean   @default(true)\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n  user       User      @relation(fields: [userId], references: [id])\n\n  @@index([userId])\n  @@index([token])\n}\n\nmodel TopicSubscription {\n  id        String   @id @default(cuid())\n  topic     String\n  createdAt DateTime @default(now())\n  userId    String\n  user      User     @relation(fields: [userId], references: [id])\n\n  @@unique([userId, topic])\n  @@index([topic])\n}\n\nmodel Notification {\n  topic        String?\n  title        String\n  body         String?\n  url          String?\n  metadata     Json?\n  createdAt    DateTime              @default(now())\n  pushedAt     DateTime?\n  pushAttempts Int                   @default(0)\n  readAt       DateTime?\n  id           Int                   @id @default(autoincrement())\n  referenceId  String?\n  Reads        NotificationRead[]\n  Response     NotificationResponse?\n\n  @@index([topic, createdAt, referenceId])\n}\n\nmodel NotificationResponse {\n  id             Int          @id @default(autoincrement())\n  notificationId Int          @unique\n  userId         String\n  response       String?\n  respondedAt    DateTime     @default(now())\n  notification   Notification @relation(fields: [notificationId], references: [id], onDelete: Cascade)\n  user           User         @relation(fields: [userId], references: [id])\n}\n\nmodel NotificationRead {\n  id             Int          @id @default(autoincrement())\n  notificationId Int\n  userId         String\n  readAt         DateTime     @default(now())\n  notification   Notification @relation(fields: [notificationId], references: [id], onDelete: Cascade)\n  user           User         @relation(fields: [userId], references: [id])\n\n  @@unique([notificationId, userId])\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"POSTGRES_PRISMA_URL\")\n  directUrl = env(\"POSTGRES_URL_NON_POOLING\")\n}\n",
  "inlineSchemaHash": "f295430bdc0b13b19bbf57ce5db3de08353c822d9a5e32697180355a04f9318e",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addressId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"SubscriptionDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Address\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToCompany\"},{\"name\":\"FormTemplates\",\"kind\":\"object\",\"type\":\"FormTemplate\",\"relationName\":\"CompanyToFormTemplate\"},{\"name\":\"Reports\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"CompanyToReport\"},{\"name\":\"Users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyToUser\"}],\"dbName\":null},\"CostCode\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Timesheets\",\"kind\":\"object\",\"type\":\"TimeSheet\",\"relationName\":\"CostCodeToTimeSheet\"},{\"name\":\"CCTags\",\"kind\":\"object\",\"type\":\"CCTag\",\"relationName\":\"CCTagToCostCode\"}],\"dbName\":null},\"CCTag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CostCodes\",\"kind\":\"object\",\"type\":\"CostCode\",\"relationName\":\"CCTagToCostCode\"},{\"name\":\"Jobsites\",\"kind\":\"object\",\"type\":\"Jobsite\",\"relationName\":\"CCTagToJobsite\"}],\"dbName\":null},\"Crew\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"crewType\",\"kind\":\"enum\",\"type\":\"WorkType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CrewToUser\"}],\"dbName\":null},\"PdfDocument\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qrId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileData\",\"kind\":\"scalar\",\"type\":\"Bytes\"},{\"name\":\"contentType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"uploadDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"DocumentTags\",\"kind\":\"object\",\"type\":\"DocumentTag\",\"relationName\":\"DocumentTagToPdfDocument\"}],\"dbName\":null},\"DocumentTag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tagName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Equipment\",\"kind\":\"object\",\"type\":\"Equipment\",\"relationName\":\"DocumentTagToEquipment\"},{\"name\":\"Documents\",\"kind\":\"object\",\"type\":\"PdfDocument\",\"relationName\":\"DocumentTagToPdfDocument\"}],\"dbName\":null},\"Equipment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qrId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creationReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"equipmentTag\",\"kind\":\"enum\",\"type\":\"EquipmentTags\"},{\"name\":\"state\",\"kind\":\"enum\",\"type\":\"EquipmentState\"},{\"name\":\"approvalStatus\",\"kind\":\"enum\",\"type\":\"ApprovalStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"overWeight\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"currentWeight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdVia\",\"kind\":\"enum\",\"type\":\"CreatedVia\"},{\"name\":\"acquiredDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"licensePlate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"licenseState\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"make\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"memo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownershipType\",\"kind\":\"enum\",\"type\":\"OwnershipType\"},{\"name\":\"registrationExpiration\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"serialNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"year\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"acquiredCondition\",\"kind\":\"enum\",\"type\":\"Condition\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FormTemplateStatus\"},{\"name\":\"EmployeeEquipmentLogs\",\"kind\":\"object\",\"type\":\"EmployeeEquipmentLog\",\"relationName\":\"EmployeeEquipmentLogToEquipment\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EquipmentToUser\"},{\"name\":\"EquipmentHauled\",\"kind\":\"object\",\"type\":\"EquipmentHauled\",\"relationName\":\"EquipmentToEquipmentHauled\"},{\"name\":\"Maintenances\",\"kind\":\"object\",\"type\":\"Maintenance\",\"relationName\":\"EquipmentToMaintenance\"},{\"name\":\"TascoLogs\",\"kind\":\"object\",\"type\":\"TascoLog\",\"relationName\":\"EquipmentToTascoLog\"},{\"name\":\"HauledInLogs\",\"kind\":\"object\",\"type\":\"TruckingLog\",\"relationName\":\"HauledEquipment\"},{\"name\":\"UsedAsTrailer\",\"kind\":\"object\",\"type\":\"TruckingLog\",\"relationName\":\"TrailerEquipment\"},{\"name\":\"UsedAsTruck\",\"kind\":\"object\",\"type\":\"TruckingLog\",\"relationName\":\"TruckEquipment\"},{\"name\":\"Maintenance\",\"kind\":\"object\",\"type\":\"mechanicProjects\",\"relationName\":\"EquipmentTomechanicProjects\"},{\"name\":\"DocumentTags\",\"kind\":\"object\",\"type\":\"DocumentTag\",\"relationName\":\"DocumentTagToEquipment\"}],\"dbName\":null},\"EmployeeEquipmentLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"equipmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maintenanceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timeSheetId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rental\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"Equipment\",\"kind\":\"object\",\"type\":\"Equipment\",\"relationName\":\"EmployeeEquipmentLogToEquipment\"},{\"name\":\"Maintenance\",\"kind\":\"object\",\"type\":\"Maintenance\",\"relationName\":\"EmployeeEquipmentLogToMaintenance\"},{\"name\":\"TimeSheet\",\"kind\":\"object\",\"type\":\"TimeSheet\",\"relationName\":\"EmployeeEquipmentLogToTimeSheet\"},{\"name\":\"RefuelLog\",\"kind\":\"object\",\"type\":\"RefuelLog\",\"relationName\":\"EmployeeEquipmentLogToRefuelLog\"}],\"dbName\":null},\"FormTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isSignatureRequired\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"enum\",\"type\":\"FormTemplateStatus\"},{\"name\":\"formType\",\"kind\":\"enum\",\"type\":\"FormTemplateCategory\"},{\"name\":\"isApprovalRequired\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"Submissions\",\"kind\":\"object\",\"type\":\"FormSubmission\",\"relationName\":\"FormSubmissionToFormTemplate\"},{\"name\":\"Company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToFormTemplate\"},{\"name\":\"FormGrouping\",\"kind\":\"object\",\"type\":\"FormGrouping\",\"relationName\":\"FormGroupingToFormTemplate\"}],\"dbName\":null},\"FormGrouping\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Fields\",\"kind\":\"object\",\"type\":\"FormField\",\"relationName\":\"FormFieldToFormGrouping\"},{\"name\":\"FormTemplate\",\"kind\":\"object\",\"type\":\"FormTemplate\",\"relationName\":\"FormGroupingToFormTemplate\"}],\"dbName\":null},\"FormField\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formGroupingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"FieldType\"},{\"name\":\"required\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"placeholder\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxLength\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filter\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minLength\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"multiple\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"FormGrouping\",\"kind\":\"object\",\"type\":\"FormGrouping\",\"relationName\":\"FormFieldToFormGrouping\"},{\"name\":\"Options\",\"kind\":\"object\",\"type\":\"FormFieldOption\",\"relationName\":\"FormFieldToFormFieldOption\"}],\"dbName\":null},\"FormFieldOption\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fieldId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Field\",\"kind\":\"object\",\"type\":\"FormField\",\"relationName\":\"FormFieldToFormFieldOption\"}],\"dbName\":null},\"FormSubmission\":{\"fields\":[{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formTemplateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"submittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FormStatus\"},{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Approvals\",\"kind\":\"object\",\"type\":\"FormApproval\",\"relationName\":\"FormApprovalToFormSubmission\"},{\"name\":\"FormTemplate\",\"kind\":\"object\",\"type\":\"FormTemplate\",\"relationName\":\"FormSubmissionToFormTemplate\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FormSubmissionToUser\"}],\"dbName\":null},\"FormApproval\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"signedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"submittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"signature\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formSubmissionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"FormSubmission\",\"kind\":\"object\",\"type\":\"FormSubmission\",\"relationName\":\"FormApprovalToFormSubmission\"},{\"name\":\"Approver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FormApprovalToUser\"}],\"dbName\":null},\"Jobsite\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qrId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creationReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvalStatus\",\"kind\":\"enum\",\"type\":\"ApprovalStatus\"},{\"name\":\"addressId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"archiveDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdVia\",\"kind\":\"enum\",\"type\":\"CreatedVia\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"radiusMeters\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FormTemplateStatus\"},{\"name\":\"Address\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToJobsite\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"JobsiteToUser\"},{\"name\":\"TimeSheets\",\"kind\":\"object\",\"type\":\"TimeSheet\",\"relationName\":\"JobsiteToTimeSheet\"},{\"name\":\"CCTags\",\"kind\":\"object\",\"type\":\"CCTag\",\"relationName\":\"CCTagToJobsite\"}],\"dbName\":null},\"Report\":{\"fields\":[{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"parameters\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"visibility\",\"kind\":\"enum\",\"type\":\"ReportVisibility\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToReport\"},{\"name\":\"ReportRuns\",\"kind\":\"object\",\"type\":\"ReportRun\",\"relationName\":\"ReportToReportRun\"}],\"dbName\":null},\"ReportRun\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"runAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ReportStatus\"},{\"name\":\"results\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customParams\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"exportFormats\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastExportedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reportId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Report\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"ReportToReportRun\"}],\"dbName\":null},\"TimeSheet\":{\"fields\":[{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobsiteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"costcode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nu\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Fp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statusComment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ApprovalStatus\"},{\"name\":\"workType\",\"kind\":\"enum\",\"type\":\"WorkType\"},{\"name\":\"editedByUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"newTimeSheetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdByAdmin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"clockInLat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"clockInLng\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"clockOutLat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"clockOutLng\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"withinFenceIn\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"withinFenceOut\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"wasInjured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"EmployeeEquipmentLogs\",\"kind\":\"object\",\"type\":\"EmployeeEquipmentLog\",\"relationName\":\"EmployeeEquipmentLogToTimeSheet\"},{\"name\":\"MaintenanceLogs\",\"kind\":\"object\",\"type\":\"MaintenanceLog\",\"relationName\":\"MaintenanceLogToTimeSheet\"},{\"name\":\"TascoLogs\",\"kind\":\"object\",\"type\":\"TascoLog\",\"relationName\":\"TascoLogToTimeSheet\"},{\"name\":\"CostCode\",\"kind\":\"object\",\"type\":\"CostCode\",\"relationName\":\"CostCodeToTimeSheet\"},{\"name\":\"Jobsite\",\"kind\":\"object\",\"type\":\"Jobsite\",\"relationName\":\"JobsiteToTimeSheet\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TimeSheetToUser\"},{\"name\":\"ChangeLogs\",\"kind\":\"object\",\"type\":\"TimeSheetChangeLog\",\"relationName\":\"TimeSheetToTimeSheetChangeLog\"},{\"name\":\"TruckingLogs\",\"kind\":\"object\",\"type\":\"TruckingLog\",\"relationName\":\"TimeSheetToTruckingLog\"},{\"name\":\"Maintenance\",\"kind\":\"object\",\"type\":\"mechanicProjects\",\"relationName\":\"TimeSheetTomechanicProjects\"}],\"dbName\":null},\"mechanicProjects\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timeSheetId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hours\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"equipmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Equipment\",\"kind\":\"object\",\"type\":\"Equipment\",\"relationName\":\"EquipmentTomechanicProjects\"},{\"name\":\"TimeSheet\",\"kind\":\"object\",\"type\":\"TimeSheet\",\"relationName\":\"TimeSheetTomechanicProjects\"}],\"dbName\":null},\"MaintenanceLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maintenanceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timeSheetId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Maintenance\",\"kind\":\"object\",\"type\":\"Maintenance\",\"relationName\":\"MaintenanceToMaintenanceLog\"},{\"name\":\"TimeSheet\",\"kind\":\"object\",\"type\":\"TimeSheet\",\"relationName\":\"MaintenanceLogToTimeSheet\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MaintenanceLogToUser\"}],\"dbName\":null},\"Maintenance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"equipmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"equipmentIssue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeEquipmentLogId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"additionalInfo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"problemDiagnosis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"solution\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalHoursLaboured\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"Priority\"},{\"name\":\"delay\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"delayReasoning\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"repaired\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"selected\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"hasBeenDelayed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"EmployeeEquipmentLog\",\"kind\":\"object\",\"type\":\"EmployeeEquipmentLog\",\"relationName\":\"EmployeeEquipmentLogToMaintenance\"},{\"name\":\"Equipment\",\"kind\":\"object\",\"type\":\"Equipment\",\"relationName\":\"EquipmentToMaintenance\"},{\"name\":\"MaintenanceLogs\",\"kind\":\"object\",\"type\":\"MaintenanceLog\",\"relationName\":\"MaintenanceToMaintenanceLog\"}],\"dbName\":null},\"TascoLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shiftType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"equipmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"laborType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"materialType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"LoadQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"screenType\",\"kind\":\"enum\",\"type\":\"LoadType\"},{\"name\":\"timeSheetId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"RefuelLogs\",\"kind\":\"object\",\"type\":\"RefuelLog\",\"relationName\":\"RefuelLogToTascoLog\"},{\"name\":\"Equipment\",\"kind\":\"object\",\"type\":\"Equipment\",\"relationName\":\"EquipmentToTascoLog\"},{\"name\":\"TascoMaterialTypes\",\"kind\":\"object\",\"type\":\"TascoMaterialTypes\",\"relationName\":\"TascoLogToTascoMaterialTypes\"},{\"name\":\"TimeSheet\",\"kind\":\"object\",\"type\":\"TimeSheet\",\"relationName\":\"TascoLogToTimeSheet\"}],\"dbName\":null},\"TascoMaterialTypes\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"TascoLog\",\"kind\":\"object\",\"type\":\"TascoLog\",\"relationName\":\"TascoLogToTascoMaterialTypes\"}],\"dbName\":null},\"TruckingLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"laborType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"taskName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"equipmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startingMileage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"endingMileage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"truckLaborLogId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trailerNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"truckNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timeSheetId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"EquipmentHauled\",\"kind\":\"object\",\"type\":\"EquipmentHauled\",\"relationName\":\"EquipmentHauledToTruckingLog\"},{\"name\":\"Materials\",\"kind\":\"object\",\"type\":\"Material\",\"relationName\":\"MaterialToTruckingLog\"},{\"name\":\"RefuelLogs\",\"kind\":\"object\",\"type\":\"RefuelLog\",\"relationName\":\"RefuelLogToTruckingLog\"},{\"name\":\"StateMileages\",\"kind\":\"object\",\"type\":\"StateMileage\",\"relationName\":\"StateMileageToTruckingLog\"},{\"name\":\"Equipment\",\"kind\":\"object\",\"type\":\"Equipment\",\"relationName\":\"HauledEquipment\"},{\"name\":\"TimeSheet\",\"kind\":\"object\",\"type\":\"TimeSheet\",\"relationName\":\"TimeSheetToTruckingLog\"},{\"name\":\"Trailer\",\"kind\":\"object\",\"type\":\"Equipment\",\"relationName\":\"TrailerEquipment\"},{\"name\":\"Truck\",\"kind\":\"object\",\"type\":\"Equipment\",\"relationName\":\"TruckEquipment\"}],\"dbName\":null},\"StateMileage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"truckingLogId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stateLineMileage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"TruckingLog\",\"kind\":\"object\",\"type\":\"TruckingLog\",\"relationName\":\"StateMileageToTruckingLog\"}],\"dbName\":null},\"Material\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"truckingLogId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"LocationOfMaterial\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"materialWeight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"loadType\",\"kind\":\"enum\",\"type\":\"LoadType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"unit\",\"kind\":\"enum\",\"type\":\"materialUnit\"},{\"name\":\"TruckingLog\",\"kind\":\"object\",\"type\":\"TruckingLog\",\"relationName\":\"MaterialToTruckingLog\"}],\"dbName\":null},\"RefuelLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeEquipmentLogId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"truckingLogId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tascoLogId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gallonsRefueled\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"milesAtFueling\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"EmployeeEquipmentLog\",\"kind\":\"object\",\"type\":\"EmployeeEquipmentLog\",\"relationName\":\"EmployeeEquipmentLogToRefuelLog\"},{\"name\":\"TascoLog\",\"kind\":\"object\",\"type\":\"TascoLog\",\"relationName\":\"RefuelLogToTascoLog\"},{\"name\":\"TruckingLog\",\"kind\":\"object\",\"type\":\"TruckingLog\",\"relationName\":\"RefuelLogToTruckingLog\"}],\"dbName\":null},\"EquipmentHauled\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"truckingLogId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"equipmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endMileage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startMileage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"destination\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Equipment\",\"kind\":\"object\",\"type\":\"Equipment\",\"relationName\":\"EquipmentToEquipmentHauled\"},{\"name\":\"TruckingLog\",\"kind\":\"object\",\"type\":\"TruckingLog\",\"relationName\":\"EquipmentHauledToTruckingLog\"}],\"dbName\":null},\"TimeSheetChangeLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timeSheetId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"changedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"changedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"changeReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"changes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"wasStatusChange\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"numberOfChanges\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ChangedByUser\"},{\"name\":\"TimeSheet\",\"kind\":\"object\",\"type\":\"TimeSheet\",\"relationName\":\"TimeSheetToTimeSheetChangeLog\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"signature\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"DOB\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"truckView\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"tascoView\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"laborView\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"mechanicView\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"permission\",\"kind\":\"enum\",\"type\":\"Permission\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"terminationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"accountSetup\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"clockedIn\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordResetTokenId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"middleName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secondLastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastSeen\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"accountSetupToken\",\"kind\":\"object\",\"type\":\"AccountSetupToken\",\"relationName\":\"AccountSetupTokenToUser\"},{\"name\":\"Contact\",\"kind\":\"object\",\"type\":\"Contacts\",\"relationName\":\"ContactsToUser\"},{\"name\":\"Equipment\",\"kind\":\"object\",\"type\":\"Equipment\",\"relationName\":\"EquipmentToUser\"},{\"name\":\"FCMToken\",\"kind\":\"object\",\"type\":\"FCMToken\",\"relationName\":\"FCMTokenToUser\"},{\"name\":\"FormApprovals\",\"kind\":\"object\",\"type\":\"FormApproval\",\"relationName\":\"FormApprovalToUser\"},{\"name\":\"FormSubmissions\",\"kind\":\"object\",\"type\":\"FormSubmission\",\"relationName\":\"FormSubmissionToUser\"},{\"name\":\"Jobsite\",\"kind\":\"object\",\"type\":\"Jobsite\",\"relationName\":\"JobsiteToUser\"},{\"name\":\"MaintenanceLogs\",\"kind\":\"object\",\"type\":\"MaintenanceLog\",\"relationName\":\"MaintenanceLogToUser\"},{\"name\":\"NotificationRead\",\"kind\":\"object\",\"type\":\"NotificationRead\",\"relationName\":\"NotificationReadToUser\"},{\"name\":\"NotificationResponse\",\"kind\":\"object\",\"type\":\"NotificationResponse\",\"relationName\":\"NotificationResponseToUser\"},{\"name\":\"PasswordResetTokens\",\"kind\":\"object\",\"type\":\"PasswordResetToken\",\"relationName\":\"PasswordResetTokenToUser\"},{\"name\":\"TimeSheets\",\"kind\":\"object\",\"type\":\"TimeSheet\",\"relationName\":\"TimeSheetToUser\"},{\"name\":\"TimeSheetChanges\",\"kind\":\"object\",\"type\":\"TimeSheetChangeLog\",\"relationName\":\"ChangedByUser\"},{\"name\":\"topicSubscriptions\",\"kind\":\"object\",\"type\":\"TopicSubscription\",\"relationName\":\"TopicSubscriptionToUser\"},{\"name\":\"Company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToUser\"},{\"name\":\"UserSettings\",\"kind\":\"object\",\"type\":\"UserSettings\",\"relationName\":\"UserToUserSettings\"},{\"name\":\"Crews\",\"kind\":\"object\",\"type\":\"Crew\",\"relationName\":\"CrewToUser\"}],\"dbName\":null},\"UserSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"generalReminders\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"personalReminders\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"cameraAccess\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"locationAccess\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"cookiesAccess\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastUpdated\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSettings\"}],\"dbName\":null},\"Contacts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"employeeId\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyContact\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyContactNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ContactsToUser\"}],\"dbName\":null},\"PasswordResetToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiration\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PasswordResetTokenToUser\"}],\"dbName\":null},\"AccountSetupToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"used\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountSetupTokenToUser\"}],\"dbName\":null},\"Address\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"street\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"AddressToCompany\"},{\"name\":\"Jobsite\",\"kind\":\"object\",\"type\":\"Jobsite\",\"relationName\":\"AddressToJobsite\"}],\"dbName\":null},\"FCMToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"platform\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastUsedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isValid\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FCMTokenToUser\"}],\"dbName\":null},\"TopicSubscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"topic\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TopicSubscriptionToUser\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"topic\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"pushedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"pushAttempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"referenceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Reads\",\"kind\":\"object\",\"type\":\"NotificationRead\",\"relationName\":\"NotificationToNotificationRead\"},{\"name\":\"Response\",\"kind\":\"object\",\"type\":\"NotificationResponse\",\"relationName\":\"NotificationToNotificationResponse\"}],\"dbName\":null},\"NotificationResponse\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notificationId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"response\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"respondedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notification\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToNotificationResponse\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationResponseToUser\"}],\"dbName\":null},\"NotificationRead\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notificationId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notification\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToNotificationRead\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationReadToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    POSTGRES_PRISMA_URL: typeof globalThis !== 'undefined' && globalThis['POSTGRES_PRISMA_URL'] || typeof process !== 'undefined' && process.env && process.env.POSTGRES_PRISMA_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

